/**                                                                                                                                                                                                                                                            
* This file was auto-generated by SAP Web IDE build and includes all                                                                                                                                                                                           
* the source files required by SAPUI5 runtime for performance optimization.                                                                                                                                                                                    
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.                                                                                                                                                                   
*/                                                                                                                                                                                                                                                             
jQuery.sap.registerPreloadedModules({                                                                                                                                                                                                                          
	"version": "2.0",                                                                                                                                                                                                                                             
	"name": "com/mscg/applications/cubiscan/worklist/Component-preload",                                                                                                                                                                                          
	"modules": {                                                                                                                                                                                                                                                  
		"com/mscg/applications/cubiscan/worklist/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"com/mscg/applications/cubiscan/worklist/model/models\",\n\t\"com/mscg/applications/cubiscan/worklist/controller/ErrorHan+
dler\"\n], function(UIComponent, Device, models, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"com.mscg.applications.cubiscan.worklist.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The compon+
ent is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this function, the FLP and device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: functio+
n() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// initialize the error handler with the component\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\t\t\t\n\t\t\t// Load the +
configuration dataset.\n\t\t\tvar oModel = this.getModel(\"mscgCommon\");\n\t\t\tvar aFilters = [];\n\t\t\taFilters.push(new sap.ui.model.Filter(\"application\", sap.ui.model.FilterOperator.EQ, \"CUBISCAN\"));\n\t\t\taFilters.push(new sap.ui.model.Filter+
(\"type\", sap.ui.model.FilterOperator.EQ, 2));\n\t\t\t\n\t\t\toModel.read(\"/ConfigurationSet\", {\n\t\t\t\tfilters: aFilters,\n\t\t\t\tsuccess: function(oData, response) {\n\t\t\t\t\tvar oObject = this._buildConfigViewModel(oData.results, this);\n\t\t\+
t\t\tvar oFioriConfigModel = new sap.ui.model.json.JSONModel(oObject);\n\t\t\t\t\tthis.setModel(oFioriConfigModel, \"fioriConfiguration\");\n\t\t\t\t\t\n\t\t\t\t\t// Publish an event so that the Worklist controller can load data.\n\t\t\t\t\tvar oEventBus+
 = sap.ui.getCore().getEventBus();\n\t\t\t\t\toEventBus.publish(\"com.mscg.applications.cubiscan.worklist.FioriConfiguration\", \"Loaded\");\n\t\t\t\t}.bind(this),\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tsap.m.MessageBox.error(\"Error retrieving co+
nfiguration information from host system.\\n\\n\" + oError.toString(), {\n\t\t\t\t\t\tstyleClass: \"sapUiSizeCompact\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t+
\t\t// set the FLP model\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * +
In this method, the ErrorHandler is destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(thi+
s, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return+
 {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP h+
as already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (+
!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for +
desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t},\n\t\t\n\t\t_buildConfigViewModel: function(aResults, oController) {\n\t\t\tvar+
 oObject = {};\n\n\t\t\tfor (var i = 0; i < aResults.length; i++) {\n\t\t\t\tvar keyParts = aResults[i].configKey.split(\".\");\n\t\t\t\tvar oParent = oObject;\n\n\t\t\t\tfor (var x = 0; x < keyParts.length; x++) {\n\t\t\t\t\tvar key = keyParts[x];\n\n\t+
\t\t\t\t// Is this the value node?\n\t\t\t\t\tif (x === keyParts.length - 1) {\n\t\t\t\t\t\t// Yes\n\t\t\t\t\t\toParent = oController._constructChild(oParent, key, aResults[i].configValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// No\n\t\t\t\t\t\toParent = oC+
ontroller._constructChild(oParent, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn oObject;\n\t\t},\n\n\t\t_constructChild: function(oParent, sNode, sValue) {\n\t\t\tif (sValue === null) {\n\t\t\t\t// Structure node.\n\t\t\t\tif (!oParent.ha+
sOwnProperty(sNode)) {\n\t\t\t\t\toParent[sNode] = {};\n\t\t\t\t}\n\t\t\t\treturn oParent[sNode];\n\t\t\t} else {\n\t\t\t\t// Value node.\n\t\t\t\toParent[sNode] = sValue;\n\t\t\t\treturn oParent;\n\t\t\t}\n\t\t}\n\t});\n});",                             
		"com/mscg/applications/cubiscan/worklist/controller/BaseController.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\"\n\t], function (Controller) {\n\t\t\"use strict\";\n\n\t\treturn Controller.extend(\"com.mscg.applications.cubiscan.worklist.co+
ntroller.BaseController\", {\n\t\n\t\t\t/**\n\t\t\t * Convenience method for accessing the router.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t\t */\n\t\t\tgetRouter : function () {\n\t\t\t\treturn+
 sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the view model by name.\n\t\t\t * @public\n\t\t\t * @param {string} [sName] the model name\n\t\t\t * @returns {sap.ui.model.Model} the model inst+
ance\n\t\t\t */\n\t\t\tgetModel : function (sName) {\n\t\t\t\treturn this.getView().getModel(sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for setting the view model.\n\t\t\t * @public\n\t\t\t * @param {sap.ui.model.Model} oModel the model +
instance\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t\t */\n\t\t\tsetModel : function (oModel, sName) {\n\t\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t +
* Getter for the resource bundle.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t\t */\n\t\t\tgetResourceBundle : function () {\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\"+
).getResourceBundle();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareEmailPress : function () {\n\t\t\t\tvar oViewModel = (this.getModel(\"objectView\") || this.+
getModel(\"worklistView\"));\n\t\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\t\tnull,\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t\t);\n\t\t\t}\n\n\t\t});\n\n\t}\n);", 
		"com/mscg/applications/cubiscan/worklist/controller/Worklist.controller.js": "sap.ui.define([\n\t\"com/mscg/applications/cubiscan/worklist/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"com/msc+
g/applications/cubiscan/worklist/model/formatter\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/core/util/Export\",\n\t\"sap/ui/core/util/ExportTypeCSV\"\n], function(BaseController, JSONModel, History, formatter, Filter, +
FilterOperator, Export, ExportTypeCSV) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.mscg.applications.cubiscan.worklist.controller.Worklist\", {\n\n\t\tformatter: formatter,\n\t\t_oTable: null,\n\t\t_oMessagesDialog: null,\n\t\t_oViewSett+
ingsDialog: null,\n\t\t_aFilters: [],\n\n\t\t// Used to maintain a list of the updates/deletes currently in process.\n\t\t_aInProcessQueue: [],\n\n\t\t// Used to combine the messages from the different update/delete tasks.\n\t\t_oMessages: null,\n\n\t\t/+
* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the worklist con+
troller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tiOriginalBusyDelay,\n\t\t\t\toTable = this.byId(\"worklistTable\");\n\n\t\t\tvar oEventBus = sap.ui.getCore().getEventBus();\n\t\t\toEventBus.subs+
cribe(\"com.mscg.applications.cubiscan.worklist.FioriConfiguration\", \"Loaded\", this.onLoadWorklistData, this);\n\n\t\t\t// Put down worklist table's original value for busy indicator delay,\n\t\t\t// so it can be restored later on. Busy handling on th+
e table is\n\t\t\t// taken care of by the table itself.\n\t\t\tiOriginalBusyDelay = oTable.getBusyIndicatorDelay();\n\t\t\t// keeps the search state\n\t\t\tthis._aTableSearchState = [];\n\n\t\t\t// Model used to manipulate control states\n\t\t\toViewMode+
l = new JSONModel({\n\t\t\t\tworklistTableTitle: this.getResourceBundle().getText(\"worklistTableTitle\"),\n\t\t\t\tsaveAsTileTitle: this.getResourceBundle().getText(\"saveAsTileTitle\", this.getResourceBundle().getText(\"worklistViewTitle\")),\n\t\t\t\t+
shareOnJamTitle: this.getResourceBundle().getText(\"worklistTitle\"),\n\t\t\t\tshareSendEmailSubject: this.getResourceBundle().getText(\"shareSendEmailWorklistSubject\"),\n\t\t\t\tshareSendEmailMessage: this.getResourceBundle().getText(\"shareSendEmailWo+
rklistMessage\", [location.href]),\n\t\t\t\ttableNoDataText: this.getResourceBundle().getText(\"tableNoDataText\"),\n\t\t\t\ttableBusyDelay: 0,\n\t\t\t\tselectedWarehouseNumber: \"0500\"\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"worklistView\");\n\n\+
t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\toTable.attachEventOnce(\"+
updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for worklist's table\n\t\t\t\toViewModel.setProperty(\"/tableBusyDelay\", iOriginalBusyDelay);\n\t\t\t});\n\n\t\t\tthis._oTable = oTable;\n\t\t},\n\n\t\tonExit: function() {+
\n\t\t\tvar oEventBus = sap.ui.getCore().getEventBus();\n\t\t\toEventBus.unsubscribe(\"com.mscg.applications.cubiscan.worklist.FioriConfiguration\", \"Loaded\", this.onLoadWorklistData, this);\n\t\t},\n\n\t\t/* ===========================================+
================ */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Triggered by the table's 'updateFinished' event: after new table\n\t\t * +
data is available, this handler method updates the table counter.\n\t\t * This should only happen if the update was successful, which is\n\t\t * why this handler is attached to 'updateFinished' and not to the\n\t\t * table's list binding's 'dataReceived'+
 method.\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t * @public\n\t\t */\n\t\tonUpdateFinished: function(oEvent) {\n\t\t\t// update the worklist's object counter after the table update\n\t\t\tvar sTitle,\n\t\t\t\toTable = oEv+
ent.getSource(),\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\");\n\t\t\t// only update the counter if the length is final and\n\t\t\t// the table is not empty\n\t\t\tif (iTotalItems && oTable.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitl+
e = this.getResourceBundle().getText(\"worklistTableTitleCount\", [iTotalItems]);\n\t\t\t} else {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"worklistTableTitle\");\n\t\t\t}\n\t\t\tthis.getModel(\"worklistView\").setProperty(\"/worklistTableTitl+
e\", sTitle);\n\t\t},\n\n\t\t/**\n\t\t * Event handler when a table item gets pressed\n\t\t * @param {sap.ui.base.Event} oEvent the table selectionChange event\n\t\t * @public\n\t\t */\n\t\tonPress: function(oEvent) {\n\t\t\t// The source is the list ite+
m that got pressed\n\t\t\tthis._showObject(oEvent.getSource());\n\t\t},\n\n\t\tonLoadWorklistData: function(sChannel, sEvent, oData) {\n\t\t\t// Define the filters for use in the binding of the items.\n\t\t\tvar aFilters = this._constructFilters();\n\t\t+
\tthis._bindData(this._oTable, aFilters);\n\t\t\tthis._aFilters = aFilters;\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the export data/download function\n\t\t * \n\t\t * @function\n\t\t * @param {object} oEvent - Event object\n\t\t */\n\t\tonDownloadIt+
ems: sap.m.Table.prototype.exportData || function(oEvent) {\n\t\t\tvar oModel = this.getModel();\n\n\t\t\toModel.read(\"/WorklistItemSet\", {\n\t\t\t\tfilters: this._aFilters,\n\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\tvar oJsonModel = new+
 JSONModel(oData);\n\n\t\t\t\t\tvar oExport = new Export({\n\t\t\t\t\t\texportType: new ExportTypeCSV({\n\t\t\t\t\t\t\tfileExtension: \"csv\",\n\t\t\t\t\t\t\tseparatorChar: \",\"\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodels: oJsonModel,\n\t\t\t\t\t\trows: {\n\t\+
t\t\t\t\t\tpath: \"/results\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolumns: [{\n\t\t\t\t\t\t\tname: \"Product\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{product}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"UOM\",\n\t\t\t\t\t\t\tte+
mplate: {\n\t\t\t\t\t\t\t\tcontent: \"{unitOfMeasure}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Status\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{status}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Length+
\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{length}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Width\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{width}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tna+
me: \"Height\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{height}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Dimension UOM\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{dimensionUom}\"\n\t\t\t\t\t\t\t}\n\t\t\t\+
t\t\t}, {\n\t\t\t\t\t\t\tname: \"Gross Weight\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{grossWeight}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Net Weight\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{netWei+
ght}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Weight UOM\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{weightUom}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Volume\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t+
\t\t\tcontent: \"{volume}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Volume UOM\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{volumeUom}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"ECC Updated\",\n\t\t\t\t\t\+
t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{updatedEcc}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Updated By\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{eccUpdatedBy}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tna+
me: \"Updated Date\",\n\t\t\t\t\t\t\ttemplate: {\n\t\t\t\t\t\t\t\tcontent: \"{eccUpdatedTimestamp}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\n\t\t\t\t\tvar sFileName = \"Worklist_Items_\" + new Date().toISOString();\n\t\t\t\t\toExport.saveFile(+
sFileName).catch(function(oError) {}).then(function() {\n\t\t\t\t\t\tsap.m.MessageToast.show(\"Worklist Items exported.\");\n\t\t\t\t\t\toExport.destroy();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tsap.m.MessageBox.error(\"+
An unknown error occurred during the download function\", {\n\t\t\t\t\t\tstyleClass: \"sapUiSizeCompact\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the Clear Worklist button.\n\t\t * \n\t\t * @function\n\t\t * @par+
am {object} oEvent - Event object\n\t\t */\n\t\tonClearWorklist: function(oEvent) {\n\t\t\tsap.m.MessageBox.confirm(\"Click 'Ok' if you choose to delete all entries from the worklist, otherwise click 'Cancel'\", {\n\t\t\t\ttitle: \"Confirm Deletion\",\n\+
t\t\t\tstyleClass: \"sapUiSizeCompact\",\n\t\t\t\tonClose: this._clearWorklist.bind(this)\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the View Settings Dialog button.\n\t\t * \n\t\t * @function\n\t\t * @param {object} oEvent - Event object\n\+
t\t */\n\t\thandleViewSettingsDialogButtonPressed: function(oEvent) {\n\t\t\tif (!this._oViewSettingsDialog) {\n\t\t\t\t// create dialog via fragment factory\n\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(this.getView().getId(),\n\t\t\t\t\t\"com+
.mscg.applications.cubiscan.worklist.view.ViewSettingsDialog\", this);\n\t\t\t}\n\t\t\t// toggle compact style\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this._oViewSettingsDialog);\n\t\t\tthis._oViewSettingsDialog.open();\n\t+
\t},\n\n\t\t/**\n\t\t * Event handler for the confirm action in the View Settings Dialog.\n\t\t * \n\t\t * @function\n\t\t * @param {object} oEvent - Event object\n\t\t */\n\t\thandleViewSettingsDialogConfirm: function(oEvent) {\n\t\t\tvar oView = this.g+
etView();\n\t\t\tvar oTable = oView.byId(\"worklistTable\");\n\t\t\tvar mParams = oEvent.getParameters();\n\t\t\tvar oBinding = oTable.getBinding(\"items\");\n\n\t\t\t// apply filters to binding\n\t\t\tvar aFilters = this._constructFilters();\n\t\t\tjQue+
ry.each(mParams.filterItems, function(i, oItem) {\n\t\t\t\tvar aSplit = oItem.getKey().split(\"__\");\n\t\t\t\tvar sPath = aSplit[0];\n\t\t\t\tvar sOperator = aSplit[1];\n\t\t\t\tvar sValue1 = aSplit[2];\n\t\t\t\tvar oFilter = new Filter(sPath, sOperator+
, sValue1);\n\t\t\t\taFilters.push(oFilter);\n\t\t\t});\n\t\t\toBinding.filter(aFilters);\n\t\t\tthis._aFilters = aFilters;\n\t\t},\n\n\t\t/**\n\t\t * Factory method for worklist item rendering.  Called for each line in the worklist items rendering.\n\t\+
t * \n\t\t * @function\n\t\t * @param {String} sId id of the parent control\n\t\t * @param {sap.ui.model.ContextBinding} oContext context binding object, data essentially\n\t\t * @return {sap.m.ColumnListItem} List item\n\t\t */\n\t\tworklistItemsFactory+
: function(sId, oContext) {\n\t\t\tvar row = new sap.m.ColumnListItem(sId, {\n\t\t\t\ttype: \"Active\",\n\t\t\t\tcells: [\n\t\t\t\t\tnew sap.m.ObjectIdentifier({\n\t\t\t\t\t\ttitle: \"{product}\"\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.ObjectIdentifier({\n\t+
\t\t\t\t\ttitle: \"{unitOfMeasure}\"\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Text({\n\t\t\t\t\t\ttext: \"{statusText}\"\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Text({\n\t\t\t\t\t\ttext: \"{updatedEcc}\"\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Text({\n\t\t\t\t\t\ttex+
t: \"{eccUpdatedBy}\"\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Text({\n\t\t\t\t\t\ttext: \"{eccUpdatedTimestamp}\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\n\t\t\treturn row;\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user chooses to change the selected wareh+
ouse value.\n\t\t * \n\t\t * @function\n\t\t * @private\n\t\t * @param {object} oEvent - Event object\n\t\t */\n\t\tonWarehouseNumberValueHelpRequest: function(oEvent) {\n\t\t\tvar handleClose = function(oEventObj) {\n\t\t\t\tvar oSelectedItem = oEventOb+
j.getParameter(\"selectedItem\");\n\t\t\t\tif (oSelectedItem) {\n\t\t\t\t\tthis.byId(\"warehouseNumberInput\").setValue(oSelectedItem.getTitle());\n\t\t\t\t}\n\t\t\t\toEventObj.getSource().getBinding(\"items\").filter([]);\n\n\t\t\t\t// Create the filter+
s and refresh.\n\t\t\t\t// Publish an event so that the Worklist controller can load data.\n\t\t\t\tthis._oTable.unbindAggregation(\"items\");\n\t\t\t\tvar oEventBus = sap.ui.getCore().getEventBus();\n\t\t\t\toEventBus.publish(\"com.mscg.applications.cub+
iscan.worklist.FioriConfiguration\", \"Loaded\");\n\t\t\t};\n\n\t\t\tvar selDialog = new sap.m.SelectDialog({\n\t\t\t\ttitle: \"Warehouses\",\n\t\t\t\titems: {\n\t\t\t\t\tpath: \"/WarehouseNumberSet\",\n\t\t\t\t\ttemplate: new sap.m.StandardListItem({\n\+
t\t\t\t\t\ttitle: \"{warehouseNumber}\",\n\t\t\t\t\t\tdescription: \"{description}\",\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tconfirm: [handleClose, this],\n\t\t\t\tcancel: [handleClose, this]\n\t\t\t});\n\t\t\tselDialog.setModel(thi+
s.getOwnerComponent().getModel(\"mscgCommon\"));\n\n\t\t\t// toggle compact style\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), selDialog);\n\t\t\tselDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share in JAM b+
utton has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"worklistView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori+
.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\toShareDialog.open();\n\t\t},\n\n\t\tonSe+
arch: function(oEvent) {\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t// In this case no new search is tri+
ggered, we only\n\t\t\t\t// refresh the list binding.\n\t\t\t\tthis.onRefresh();\n\t\t\t} else {\n\t\t\t\tvar aTableSearchState = [];\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\t\taTableSea+
rchState = [new Filter(\"product\", FilterOperator.Contains, sQuery)];\n\t\t\t\t}\n\t\t\t\tthis._applySearch(aTableSearchState);\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t * and group settings and refr+
eshes the list binding.\n\t\t * @public\n\t\t */\n\t\tonRefresh: function() {\n\t\t\tvar oTable = this.byId(\"table\");\n\t\t\toTable.getBinding(\"items\").refresh();\n\t\t},\n\n\t\t/**\n\t\t * Triggered by the message dialog close event.\n\t\t * @functi+
on\n\t\t * @param {object} oEvent - event object\n\t\t */\n\t\tonMessagesDialogClose: function(oEvent) {\n\t\t\tthis._getMessagesDialog().close();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* internal methods  +
                                          */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Used to display the messages dialog.\n\t\t * \n\t\t * @function\n\t\t * @private\n\t\t * @param {object} oMessages - JS+
ON object\n\t\t */\n\t\t_displayMessages: function(oMessages) {\n\t\t\tvar oJsonModel = new JSONModel(oMessages);\n\n\t\t\t// Display the dialog and bind to the odata model.\n\t\t\tvar oDialog = this._getMessagesDialog();\n\t\t\toDialog.setModel(oJsonMod+
el);\n\t\t\toDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Triggered after the user confirms that they want to clear the worklist table.\n\t\t * \n\t\t * @function\n\t\t * @private\n\t\t * @param {object} oAction\n\t\t */\n\t\t_clearWorklist: function(oActio+
n) {\n\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\t\t\t\tvar oModel = this.getModel();\n\t\t\t\tvar oObject = {\n\t\t\t\t\twarehouseNumber: this.getOwnerComponent().getModel(\"fioriConfiguration\").getProperty(\"/user/defaults/warehouseNumber\"+
),\n\t\t\t\t\tproduct: \"*\",\n\t\t\t\t\tunitOfMeasure: \"*\"\n\t\t\t\t};\n\n\t\t\t\tvar sKey = oModel.createKey(\"WorklistItemSet\", oObject);\n\t\t\t\toModel.remove(\"/\" + sKey, {\n\t\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\t\tvar oMess+
ages = JSON.parse(oResponse.headers[\"zmscg-messages\"]);\n\t\t\t\t\t\tthis._displayMessages(oMessages);\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\terror: function(oError) {\n\t\t\t\t\t\tsap.m.MessageBox.error(\"Unknown error occurred while clearing the worklis+
t\", {\n\t\t\t\t\t\t\tstyleClass: \"sapUiSizeCompact\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this)\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Messages dialog and if it is not already created, creates it and returns a reference.\n\t\t * @fu+
nction\n\t\t * @return {sap.m.Dialog} returns an instance of the dialog\n\t\t * @private\n\t\t */\n\t\t_getMessagesDialog: function() {\n\t\t\t// create dialog lazily\n\t\t\tif (!this._oMessagesDialog) {\n\t\t\t\t// create dialog via fragment factory\n\t+
\t\t\tthis._oMessagesDialog = sap.ui.xmlfragment(this.getView().getId(),\n\t\t\t\t\t\"com.mscg.applications.cubiscan.worklist.view.MessageDialog\", this);\n\t\t\t}\n\n\t\t\treturn this._oMessagesDialog;\n\t\t},\n\n\t\t_bindData: function(oTable, aFilters+
) {\n\t\t\t// Bind the list.\n\t\t\toTable.bindAggregation(\"items\", {\n\t\t\t\tpath: \"/WorklistItemSet\",\n\t\t\t\tfactory: this.worklistItemsFactory.bind(this),\n\t\t\t\tsorter: {\n\t\t\t\t\tpath: \"product\",\n\t\t\t\t\tdescending: false\n\t\t\t\t},+
\n\t\t\t\tfilters: aFilters\n\t\t\t});\n\t\t},\n\n\t\t_constructFilters: function() {\n\t\t\tvar filters = new Array();\n\t\t\tvar oConfigModel = this.getOwnerComponent().getModel(\"fioriConfiguration\");\n\n\t\t\t// Define the filters for use in the bin+
ding of the items.\n\t\t\tvar warehouseFilter = new sap.ui.model.Filter(\"warehouseNumber\", sap.ui.model.FilterOperator.EQ, oConfigModel.getProperty(\n\t\t\t\t\"/user/defaults/warehouseNumber\"));\n\t\t\tfilters.push(warehouseFilter);\n\n\t\t\treturn fi+
lters;\n\t\t},\n\n\t\t/**\n\t\t * Shows the selected item on the object page\n\t\t * On phones a additional history entry is created\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t * @private\n\t\t */\n\t\t_showObject: function(oItem) {\n+
\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tobjectId: oItem.getBindingContext().getProperty(\"product\")\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t * @para+
m {sap.ui.model.Filter[]} aTableSearchState An array of filters for the search\n\t\t * @private\n\t\t */\n\t\t_applySearch: function(aTableSearchState) {\n\t\t\tvar oTable = this.byId(\"table\"),\n\t\t\t\toViewModel = this.getModel(\"worklistView\");\n\t+
\t\toTable.getBinding(\"items\").filter(aTableSearchState, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aTableSearchState.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/tableNoDataText\+
", this.getResourceBundle().getText(\"worklistNoDataWithSearchText\"));\n\t\t\t}\n\t\t}\n\t});\n});",                                                                                                                                                          
		"com/mscg/applications/cubiscan/worklist/model/formatter.js": "sap.ui.define([\n\t] , function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Rounds the number unit value to 2 digits\n\t\t\t * @public\n\t\t\t * @param {string} sValue +
the number string to be rounded\n\t\t\t * @returns {string} sValue with 2 digits rounded\n\t\t\t */\n\t\t\tnumberUnit : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}+
\n\n\t\t};\n\n\t}\n);",                                                                                                                                                                                                                                        
		"com/mscg/applications/cubiscan/worklist/controller/NotFound.controller.js": "sap.ui.define([\n\t\t\"com/mscg/applications/cubiscan/worklist/controller/BaseController\"\n\t], function (BaseController) {\n\t\t\"use strict\";\n\n\t\treturn BaseController+
.extend(\"com.mscg.applications.cubiscan.worklist.controller.NotFound\", {\n\n\t\t\t/**\n\t\t\t * Navigates to the worklist when the link is pressed\n\t\t\t * @public\n\t\t\t */\n\t\t\tonLinkPressed : function () {\n\t\t\t\tthis.getRouter().navTo(\"workl+
ist\");\n\t\t\t}\n\n\t\t});\n\n\t}\n);",                                                                                                                                                                                                                       
		"com/mscg/applications/cubiscan/worklist/localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"com/mscg/applications/cubisc+
an/approval/\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The lo+
cal mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJso+
nFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"WorklistItemSet\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam ==+
= \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSou+
rce.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new Mock+
Server({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t+
\t\t});\n\n\t\t\t\t// load local mock data\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\+
tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handli+
ng the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\",+
 aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnRes+
ponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app,+
 should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",                                       
		"com/mscg/applications/cubiscan/worklist/view/Worklist.view.xml": "<mvc:View controllerName=\"com.mscg.applications.cubiscan.worklist.controller.Worklist\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:semantic=\"sap.f.semantic\" xmlns:footerb+
ar=\"sap.ushell.ui.footerbar\">\n\t<semantic:SemanticPage id=\"page\" headerPinnable=\"false\" toggleHeaderOnTitleClick=\"false\">\n\t\t<semantic:titleHeading>\n\t\t\t<Title text=\"{i18n>worklistTitle}\"/>\n\t\t</semantic:titleHeading>\n\t\t<semantic:con+
tent>\n\t\t\t<Table id=\"worklistTable\" width=\"auto\" noDataText=\"{worklistView>/tableNoDataText}\" busyIndicatorDelay=\"{worklistView>/tableBusyDelay}\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" mode=\"MultiSelect\" growing=\"true\" growingScrollT+
oLoad=\"true\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Title id=\"tableHeader\" text=\"{worklistView>/worklistTableTitle}\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Input id=\"warehouseNumberInput\" type=\"Text\" showValueHelp=\+
"true\" valueHelpOnly=\"true\" tooltip=\"Warehouse Number\" width=\"120px\"\n\t\t\t\t\t\t\tvalueHelpRequest=\"onWarehouseNumberValueHelpRequest\" value=\"{fioriConfiguration>/user/defaults/warehouseNumber}\" change=\"onWarehouseNumberChange\"></Input>\n\+
t\t\t\t\t\t<Button id=\"downloadButton\" icon=\"sap-icon://download\" tooltip=\"Download\" press=\"onDownloadItems\"/>\n\t\t\t\t\t\t<Button id=\"clearWorklistButton\" icon=\"sap-icon://delete\" tooltip=\"Clear Worklist\" press=\"onClearWorklist\"/>\n\t\t+
\t\t\t\t<Button id=\"tableViewSettingsButton\" tooltip=\"View Settings\" icon=\"sap-icon://drop-down-list\" press=\"handleViewSettingsDialogButtonPressed\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column>\n\t\t\t\t+
\t\t<Text text=\"{i18n>worklist.columns.product}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Center\">\n\t\t\t\t\t\t<Text text=\"{i18n>worklist.columns.unitOfMeasure}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Center\">\n\t\t\t\t\t\t<T+
ext text=\"{i18n>worklist.columns.status}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Center\">\n\t\t\t\t\t\t<Text text=\"{i18n>worklist.columns.updatedToEcc}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Center\">\n\t\t\t\t\t\t<Text text+
=\"{i18n>worklist.columns.updatedBy}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column hAlign=\"Center\">\n\t\t\t\t\t\t<Text text=\"{i18n>worklist.columns.updatedDate}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t</Table>\n\t\t</semantic:content>\n\t\t<+
semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamA+
ctive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{worklistView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:Sem+
anticPage>\n</mvc:View>",                                                                                                                                                                                                                                      
		"com/mscg/applications/cubiscan/worklist/view/NotFound.view.xml": "<mvc:View\n\tcontrollerName=\"com.mscg.applications.cubiscan.worklist.controller.NotFound\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\ttitle=\"{i18n>not+
FoundTitle}\"\n\t\ttext=\"{i18n>notFoundText}\"\n\t\ticon=\"{sap-icon://document}\"\n\t\tid=\"page\"\n\t\tdescription=\"\">\n\t\t<customDescription>\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\" />\n\t\t</customDescripti+
on>\n\t</MessagePage>\n\n</mvc:View>",                                                                                                                                                                                                                         
		"com/mscg/applications/cubiscan/worklist/controller/App.controller.js": "sap.ui.define([\n\t\"com/mscg/applications/cubiscan/worklist/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use str+
ict\";\n\n\treturn BaseController.extend(\"com.mscg.applications.cubiscan.worklist.controller.App\", {\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\+
t\t\toViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(+
\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().\n\t\t\tthen(fnSetAppNotBusy);\n\n\t\t\t// apply content density mode to root view\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getCo+
ntentDensityClass());\n\t\t}\n\t});\n});",                                                                                                                                                                                                                     
		"com/mscg/applications/cubiscan/worklist/controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (UI5Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn UI5Object.extend(\"com.mscg.applic+
ations.cubiscan.worklist.controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oCompone+
nt reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias com.mscg.applications.cubiscan.approval.controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").+
getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\tthis._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\tthis._oModel.attachMetad+
ataFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t}, this);\n\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getPara+
meters();\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t\t// A request that cannot be sent to the server is a +
technical error that we have to handle though\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t\t\tthis._showServiceError(oParams.r+
esponse);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be display.\n\t\t\t * @param {string} sDetails a technical error to be+
 displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showServiceError : function (sDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorTe+
xt,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose: function () {\n\t\t\+
t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n);",                                                                                                                                           
		"com/mscg/applications/cubiscan/worklist/controller/Object.controller.js": "/*global location*/\nsap.ui.define([\n\t\t\"com/mscg/applications/cubiscan/worklist/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/core/routin+
g/History\",\n\t\t\"com/mscg/applications/cubiscan/worklist/model/formatter\"\n\t], function (\n\t\tBaseController,\n\t\tJSONModel,\n\t\tHistory,\n\t\tformatter\n\t) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"com.mscg.applications.cubis+
can.worklist.controller.Object\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =============================+
============================== */\n\n\t\t\t/**\n\t\t\t * Called when the worklist controller is instantiated.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonInit : function () {\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t+
\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t\t// between the busy indication for loading the view's meta data\n\t\t\t\tvar iOriginalBusyDelay,\n\t\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\t\tbusy : true,\n\t\t\+
t\t\t\tdelay : 0\n\t\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t\t// Store original busy indicator delay, so it can be restored later on\n\t\t\t\tiOriginalBusyDelay = this.getVi+
ew().getBusyIndicatorDelay();\n\t\t\t\tthis.setModel(oViewModel, \"objectView\");\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function () {\n\t\t\t\t\t\t// Restore original busy indicator delay for the object view\n\t\t\t\t\t\toVie+
wModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========+
================================================== */\n\n\t\t\t/**\n\t\t\t * Event handler when the share in JAM button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareInJamPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"objec+
tView\"),\n\t\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\t\tsettings: {\n\t\t\t\t\t\t\tobject:{\n\t\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\t\tshare: +
oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\toShareDialog.open();\n\t\t\t},\n\n\n\t\t\t/* =========================================================== */\n\t\t\t/* internal methods                   +
                         */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path.\n\t\t\t * @function\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'o+
bject'\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onObjectMatched : function (oEvent) {\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\n\t\t\t\tthis.getModel().metadataLoaded().then( function() {\n\t\t\t\t\tvar sObjectPath = this.getMo+
del().createKey(\"WorklistItemSet\", {\n\t\t\t\t\t\tproduct :  sObjectId\n\t\t\t\t\t});\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path.\n\t\t\t * @function\n\t\t\+
t * @param {string} sObjectPath path to the object to be bound\n\t\t\t * @private\n\t\t\t */\n\t\t\t_bindView : function (sObjectPath) {\n\t\t\t\tvar oViewModel = this.getModel(\"objectView\"),\n\t\t\t\t\toDataModel = this.getModel();\n\n\t\t\t\tthis.get+
View().bindElement({\n\t\t\t\t\tpath: sObjectPath,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\t\tdataRequested: function () {\n\t\t\t\t\t\t\toDataModel.metadataLoaded().then(function () {\n\t\t\t\t\t\t\t\t// Bus+
y indicator on view should only be set if metadata is loaded,\n\t\t\t\t\t\t\t\t// otherwise there may be two busy indications next to each other on the\n\t\t\t\t\t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\n\t\t+
\t\t\t\t\t\t// while metadata is loaded.\n\t\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdataReceived: function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t\t}\n\t\t\t+
\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_onBindingChange : function () {\n\t\t\t\tvar oView = this.getView(),\n\t\t\t\t\toViewModel = this.getModel(\"objectView\"),\n\t\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t\t// No data for the bindi+
ng\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\t\tthis.getRouter().getTargets().display(\"objectNotFound\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar oResourceBundle = this.getResourceBundle(),\n\t\t\t\t\toObject = oView.getBindingCont+
ext().getObject(),\n\t\t\t\t\tsObjectId = oObject.product,\n\t\t\t\t\tsObjectName = oObject.product;\n\n\t\t\t\t// Everything went fine.\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBun+
dle.getText(\"saveAsTileTitle\", [sObjectName]));\n\t\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId+
]));\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",                                                 
		"com/mscg/applications/cubiscan/worklist/view/App.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tcontrollerName=\"com.mscg.applications.cubiscan.worklist.controller.App\"\n\tdisplayBlock=\"true\"\n\txmlns=\"sap.m\">\n\n\t<App id=\"app\"\n\t\+
t busy=\"{appView>/busy}\"\n\t\t busyIndicatorDelay=\"{appView>/delay}\"/>\n\n</mvc:View>",                                                                                                                                                                    
		"com/mscg/applications/cubiscan/worklist/view/ObjectNotFound.view.xml": "<mvc:View\n\tcontrollerName=\"com.mscg.applications.cubiscan.worklist.controller.NotFound\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\ttitle=\"{i1+
8n>objectTitle}\"\n\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\ticon=\"{sap-icon://product}\"\n\t\tdescription=\"\"\n\t\tid=\"page\">\n\t\t<customDescription>\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\" />\n\t\t</customD+
escription>\n\t</MessagePage>\n\n</mvc:View>",                                                                                                                                                                                                                 
		"com/mscg/applications/cubiscan/worklist/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog\n\t\tconfirm=\"handleViewSettingsDialogConfirm\">\n\t\t<filterItems>\n\t\+
t\t<ViewSettingsFilterItem\n\t\t\t\ttext=\"Status\"\n\t\t\t\tkey=\"status\"\n\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"New Item\" key=\"status__EQ__N\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"Scanned\" key=\"status+
__EQ__S\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"Updated to ECC\" key=\"status__EQ__U\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"Re-Measure\" key=\"status__EQ__R\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"Approved but not Updated to ECC\" key=\"status__EQ__A\"/+
>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>",                                                                                                                                
		"com/mscg/applications/cubiscan/worklist/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\n\t\t\tcreateDeviceModel : function () +
{\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t},\n\n\t\t\tcreateFLPModel : function () {\n\t\t\t\tvar fnGetUser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n+
\t\t\t\t\tbIsShareInJamActive = fnGetUser ? fnGetUser().isJamActive() : false,\n\t\t\t\t\toModel = new JSONModel({\n\t\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t\t});\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oMod+
el;\n\t\t\t}\n\n\t\t};\n\n\t}\n);",                                                                                                                                                                                                                            
		"com/mscg/applications/cubiscan/worklist/view/Object.view.xml": "<mvc:View\n\tcontrollerName=\"com.mscg.applications.cubiscan.worklist.controller.Object\"\n\txmlns=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:semantic=\"sap.f.semantic\"\n\txmlns+
:footerbar=\"sap.ushell.ui.footerbar\">\n\n\t<semantic:SemanticPage\n\t\tid=\"page\"\n\t\theaderPinnable=\"false\"\n\t\ttoggleHeaderOnTitleClick=\"false\"\n\t\tbusy=\"{objectView>/busy}\"\n\t\tbusyIndicatorDelay=\"{objectView>/delay}\">\n\n\t\t<semantic:+
titleHeading>\n\t\t\t<Title text=\"{product}\" />\n\t\t</semantic:titleHeading>\n\n\t\t<semantic:headerContent>\n\t\t\t<ObjectNumber\n\t\t\t\tnumberUnit=\"{unitOfMeasure}\"\n\t\t\t/>\n\t\t</semantic:headerContent>\n\n\t\t<semantic:sendEmailAction>\n\t\t\+
t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamP+
ress\"/>\n\t\t</semantic:shareInJamAction>\n\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id =\"shareTile\" title=\"{objectView>/saveAsTileTitle}\" />\n\t\t</semantic:saveAsTileAction>\n\n\t</semantic:SemanticPage>\n\n</mvc:View>"+
,                                                                                                                                                                                                                                                              
		"com/mscg/applications/cubiscan/worklist/view/MessageDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"messagesDialog\" title=\"Messages\+
" resizable=\"false\" contentHeight=\"300px\" showHeader=\"false\" contentWidth=\"500px\"\n\t\tverticalScrolling=\"false\">\n\t\t<content>\n\t\t\t<MessageView items=\"{ path: '/messages' }\">\n\t\t\t\t<items>\n\t\t\t\t\t<MessageItem type=\"{type}\" title+
=\"{title}\" description=\"{description}\"/>\n\t\t\t\t</items>\n\t\t\t</MessageView>\n\t\t</content>\n\t\t<buttons>\n\t\t\t<Button id=\"messagesCloseButton\" text=\"Close\" press=\"onMessagesDialogClose\"/>\n\t\t</buttons>\n\t</Dialog>\n</core:FragmentDe+
finition>"                                                                                                                                                                                                                                                     
	}                                                                                                                                                                                                                                                             
});                                                                                                                                                                                                                                                            